<sdf version='1.9'>
  <model name='Rover'>
    <pose>0 0 .5 0 0 0</pose>
    <self_collide>false</self_collide>
    <static>false</static>
    <link name="base_link">
      <inertial>
        <mass>18.71</mass>
        <inertia>
          <ixx>0.3986</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>1.092</iyy>
          <iyz>0</iyz>
          <izz>1.337</izz>
        </inertia>
      </inertial>
      <gravity>true</gravity>
      <velocity_decay/>
      <collision name="Base_Collision">
        <pose>0 0 .0875 0 0 0</pose>
        <geometry>
          <box>
            <size>0.8 0.389 0.171</size>
          </box>
        </geometry>
        <surface>
          <contact>
            <ode>
              <min_depth>0.001</min_depth>
              <max_vel>0</max_vel>
            </ode>
          </contact>
        </surface>
      </collision>
      <!-- <visual name="Base_Collision_Visual">
        <pose>0 0 .0875 0 0 0</pose>
        <geometry>
          <box>
            <size>0.8 0.389 0.171</size>
          </box>
        </geometry>
        <material>
          <diffuse>0 1 0 1</diffuse>
          <ambient>0 1 0 1</ambient>
        </material>
      </visual> -->
      <visual name="BaseMetal">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://rover/BaseMetal.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <visual name="BaseRubber">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://rover/BaseRubber.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <visual name="BaseYellowPlasticTop">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://rover/BasePlastic.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <visual name="BaseClearPlasticGuard">
        <pose>0 0 0 0 0 0</pose>
        <cast_shadow>0</cast_shadow>
        <transparency>.5</transparency>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://rover/BaseClear.dae</uri>
          </mesh>
        </geometry>
        <material>
          <diffuse>0.6 0.6 0.7 1.0</diffuse>
          <ambient>0.6 0.6 0.7 1.0</ambient>
        </material>
      </visual>
    </link>
    <link name="FrontLeftArm">
      <pose relative_to="FrontLeftArmJoint">0 0 0 0 0 0</pose>
      <inertial>
        <mass>1.16</mass>
        <inertia>
          <ixx>0.006274</ixx>
          <ixy>0.002744</ixy>
          <ixz>0</ixz>
          <iyy>0.007678</iyy>
          <iyz>0</iyz>
          <izz>0.009408</izz>
        </inertia>
      </inertial>
      <gravity>true</gravity>
      <velocity_decay/>
      <visual name="FrontLeftArmMetal_Visual">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://rover/ArmLeftMetal.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <visual name="FrontLeftArmPlastic_Visual">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://rover/ArmLeftPlastic.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <!-- <visual name="FrontLeftArm_Collision_Visual">
        <pose>0.055 0 -.0305 0 .505 0</pose>
        <geometry>
          <box>
            <size>.21 .075 .038</size>
          </box>
        </geometry>
        <material>
          <diffuse>0 0 1 1</diffuse>
          <ambient>0 0 1 1</ambient>
        </material>
      </visual> -->
      <collision name="FrontLeftArm_Collision">
        <pose>0.055 0 -.0305 0 .505 0</pose>
        <geometry>
          <box>
            <size>.21 .075 .038</size>
          </box>
        </geometry>
        <surface>
          <contact>
            <ode>
              <min_depth>0.001</min_depth>
              <max_vel>0</max_vel>
            </ode>
          </contact>
        </surface>
      </collision>
    </link>
    <link name="FrontLeftHubMotorWheel">
      <pose relative_to="FrontLeftHubMotorWheelJoint">0 0 0 0 0 0</pose>
      <inertial>
        <mass>3.854</mass>
        <inertia>
          <ixx>0.009002</ixx>
          <ixy>0.0006021</ixy>
          <ixz>0</ixz>
          <iyy>0.01313</iyy>
          <iyz>0</iyz>
          <izz>0.009003</izz>
        </inertia>
      </inertial>
      <gravity>true</gravity>
      <velocity_decay/>
      <visual name="FrontLeftHubMotorWheelMetal_Visual">
        <pose>0 0 0 0 0 3.14159265359</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://rover/HubMotor.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <visual name="FrontLeftHubMotorWheelRubber_Visual">
        <pose>0 0 0 0 0 3.14159265359</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://rover/RubberWheel.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <!-- <visual name="FrontLeftHubMotorWheel_Collision_Visual">
        <pose>0 0 0 1.57079632679 0 0</pose>
        <geometry>
          <cylinder>
            <radius>.108</radius>
            <length>.06</length>
          </cylinder>
        </geometry>
        <material>
          <diffuse>1 0 0 1</diffuse>
          <ambient>1 0 0 1</ambient>
        </material>
      </visual> -->
      <collision name="FrontLeftHubMotorWheel_Collision">
        <pose>0 0 0 1.57079632679 0 0</pose>
        <geometry>
          <cylinder>
            <radius>.108</radius>
            <length>.06</length>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode>
              <min_depth>0.001</min_depth>
              <max_vel>0</max_vel>
            </ode>
          </contact>
          <friction>
            <ode>
              <mu>1.0</mu>
              <mu2>0.8</mu2>
              <fdir1>1 0 0</fdir1>
            </ode>
          </friction>
        </surface>
      </collision>
    </link>
    <joint name="FrontLeftArmJoint" type="revolute">
      <parent>base_link</parent>
      <child>FrontLeftArm</child>
      <pose relative_to="base_link">.263 .238 .029 0 0 0</pose>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-0.5</lower>
          <upper>0.5</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>300</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>
    <joint name="FrontLeftHubMotorWheelJoint" type="revolute">
      <parent>FrontLeftArm</parent>
      <child>FrontLeftHubMotorWheel</child>
      <pose relative_to="FrontLeftArm">.11861 .095 -.07453 0 0 0</pose>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>
        <link name="BackLeftArm">
      <pose relative_to="BackLeftArmJoint">0 0 0 0 0 0</pose>
      <inertial>
        <mass>1.16</mass>
        <inertia>
          <ixx>0.006274</ixx>
          <ixy>0.002744</ixy>
          <ixz>0</ixz>
          <iyy>0.007678</iyy>
          <iyz>0</iyz>
          <izz>0.009408</izz>
        </inertia>
      </inertial>
      <gravity>true</gravity>
      <velocity_decay/>
      <visual name="BackLeftArmMetal_Visual">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://rover/ArmLeftMetal.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <visual name="BackLeftArmPlastic_Visual">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://rover/ArmLeftPlastic.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <!-- <visual name="BackLeftArm_Collision_Visual">
        <pose>0.055 0 -.0305 0 .505 0</pose>
        <geometry>
          <box>
            <size>.21 .075 .038</size>
          </box>
        </geometry>
        <material>
          <diffuse>0 0 1 1</diffuse>
          <ambient>0 0 1 1</ambient>
        </material>
      </visual> -->
      <collision name="BackLeftArm_Collision">
        <pose>0.055 0 -.0305 0 .505 0</pose>
        <geometry>
          <box>
            <size>.21 .075 .038</size>
          </box>
        </geometry>
        <surface>
          <contact>
            <ode>
              <min_depth>0.001</min_depth>
              <max_vel>0</max_vel>
            </ode>
          </contact>
        </surface>
      </collision>
    </link>
    <link name="BackLeftHubMotorWheel">
      <pose relative_to="BackLeftHubMotorWheelJoint">0 0 0 0 0 0</pose>
      <inertial>
        <mass>3.854</mass>
        <inertia>
          <ixx>0.009002</ixx>
          <ixy>0.0006021</ixy>
          <ixz>0</ixz>
          <iyy>0.01313</iyy>
          <iyz>0</iyz>
          <izz>0.009003</izz>
        </inertia>
      </inertial>
      <gravity>true</gravity>
      <velocity_decay/>
      <visual name="BackLeftHubMotorWheelMetal_Visual">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://rover/HubMotor.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <visual name="BackLeftHubMotorWheelRubber_Visual">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://rover/RubberWheel.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <!-- <visual name="BackLeftHubMotorWheel_Collision_Visual">
        <pose>0 0 0 1.57079632679 0 0</pose>
        <geometry>
          <cylinder>
            <radius>.108</radius>
            <length>.06</length>
          </cylinder>
        </geometry>
        <material>
          <diffuse>1 0 0 1</diffuse>
          <ambient>1 0 0 1</ambient>
        </material>
      </visual> -->
      <collision name="BackLeftHubMotorWheel_Collision">
        <pose>0 0 0 1.57079632679 0 0</pose>
        <geometry>
          <cylinder>
            <radius>.108</radius>
            <length>.06</length>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode>
              <min_depth>0.001</min_depth>
              <max_vel>0</max_vel>
            </ode>
          </contact>
          <friction>
            <ode>
              <mu>1.0</mu>
              <mu2>0.8</mu2>
              <fdir1>1 0 0</fdir1>
            </ode>
          </friction>
        </surface>
      </collision>
    </link>
    <joint name="BackLeftArmJoint" type="revolute">
      <parent>base_link</parent>
      <child>BackLeftArm</child>
      <pose relative_to="base_link">-.263 -.238 .029 0 0 3.14159265359</pose>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-0.5</lower>
          <upper>0.5</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>300</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>
    <joint name="BackLeftHubMotorWheelJoint" type="revolute">
      <parent>BackLeftArm</parent>
      <child>BackLeftHubMotorWheel</child>
      <pose relative_to="BackLeftArm">.11861 .095 -.07453 0 0 3.14159265359</pose>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>
    <link name="FrontRightArm">
      <pose relative_to="FrontRightArmJoint">0 0 0 0 0 0</pose>
      <inertial>
        <mass>1.16</mass>
        <inertia>
          <ixx>0.006274</ixx>
          <ixy>0.002744</ixy>
          <ixz>0</ixz>
          <iyy>0.007678</iyy>
          <iyz>0</iyz>
          <izz>0.009408</izz>
        </inertia>
      </inertial>
      <gravity>true</gravity>
      <velocity_decay/>
      <visual name="FrontRightArmMetal_Visual">
        <pose>0 0 0 0 -.017 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://rover/ArmRightMetal.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <visual name="FrontRightArmPlastic_Visual">
        <pose>0 0 0 0 -.017 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://rover/ArmRightPlastic.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <!-- <visual name="FrontRightArm_Collision_Visual">
        <pose>0.055 0 -.0305 0 .505 0</pose>
        <geometry>
          <box>
            <size>.21 .075 .038</size>
          </box>
        </geometry>
        <material>
          <diffuse>0 0 1 1</diffuse>
          <ambient>0 0 1 1</ambient>
        </material>
      </visual> -->
      <collision name="FrontRightArm_Collision">
        <pose>0.055 0 -.0305 0 .505 0</pose>
        <geometry>
          <box>
            <size>.21 .075 .038</size>
          </box>
        </geometry>
        <surface>
          <contact>
            <ode>
              <min_depth>0.001</min_depth>
              <max_vel>0</max_vel>
            </ode>
          </contact>
        </surface>
      </collision>
    </link>
    <link name="FrontRightHubMotorWheel">
      <pose relative_to="FrontRightHubMotorWheelJoint">0 0 0 0 0 0</pose>
      <inertial>
        <mass>3.854</mass>
        <inertia>
          <ixx>0.009002</ixx>
          <ixy>0.0006021</ixy>
          <ixz>0</ixz>
          <iyy>0.01313</iyy>
          <iyz>0</iyz>
          <izz>0.009003</izz>
        </inertia>
      </inertial>
      <gravity>true</gravity>
      <velocity_decay/>
      <visual name="FrontRightHubMotorWheelMetal_Visual">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://rover/HubMotor.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <visual name="FrontRightHubMotorWheelRubber_Visual">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://rover/RubberWheel.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <!-- <visual name="FrontRightHubMotorWheel_Collision_Visual">
        <pose>0 0 0 1.57079632679 0 0</pose>
        <geometry>
          <cylinder>
            <radius>.108</radius>
            <length>.06</length>
          </cylinder>
        </geometry>
        <material>
          <diffuse>1 0 0 1</diffuse>
          <ambient>1 0 0 1</ambient>
        </material>
      </visual> -->
      <collision name="FrontRightHubMotorWheel_Collision">
        <pose>0 0 0 1.57079632679 0 0</pose>
        <geometry>
          <cylinder>
            <radius>.108</radius>
            <length>.06</length>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode>
              <min_depth>0.001</min_depth>
              <max_vel>0</max_vel>
            </ode>
          </contact>
          <friction>
            <ode>
              <mu>1.0</mu>
              <mu2>0.8</mu2>
              <fdir1>1 0 0</fdir1>
            </ode>
          </friction>
        </surface>
      </collision>
    </link>
    <joint name="FrontRightArmJoint" type="revolute">
      <parent>base_link</parent>
      <child>FrontRightArm</child>
      <pose relative_to="base_link">.263 -.238 .029 0 0 0</pose>
      <axis>def generate_launch_description():
    package_dir = get_package_share_directory('my_package')


# Get robot
    robot_description_path = os.path.join(package_dir, 'resource', 'my_robot.urdf')

# Get map
    webots = WebotsLauncher(
        world=os.path.join(package_dir, 'worlds', 'my_world.wbt')
    )

    my_robot_driver = WebotsController(
        robot_name='my_robot',
        parameters=[
            {'robot_description': robot_description_path},
        ]
    )

    obstacle_avoider = Node(
        package='my_package',
        executable='obstacle_avoider',
    )

    return LaunchDescription([
        webots,
        my_robot_driver,
        obstacle_avoider,
        launch.actions.RegisterEventHandler(
            event_handler=launch.event_handlers.OnProcessExit(
                target_action=webots,
                on_exit=[launch.actions.EmitEvent(event=launch.events.Shutdown())],
            )
        )
    ])
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-0.5</lower>
          <upper>0.5</upper>
        </limit>def generate_launch_description():
    package_dir = get_package_share_directory('my_package')


# Get robot
    robot_description_path = os.path.join(package_dir, 'resource', 'my_robot.urdf')

# Get map
    webots = WebotsLauncher(
        world=os.path.join(package_dir, 'worlds', 'my_world.wbt')
    )

    my_robot_driver = WebotsController(
        robot_name='my_robot',
        parameters=[
            {'robot_description': robot_description_path},
        ]
    )

    obstacle_avoider = Node(
        package='my_package',
        executable='obstacle_avoider',
    )

    return LaunchDescription([
        webots,
        my_robot_driver,
        obstacle_avoider,
        launch.actions.RegisterEventHandler(
            event_handler=launch.event_handlers.OnProcessExit(
                target_action=webots,
                on_exit=[launch.actions.EmitEvent(event=launch.events.Shutdown())],
            )
        )
    ])
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>300</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>
    <joint name="FrontRightHubMotorWheelJoint" type="revolute">
      <parent>FrontRightArm</parent>
      <child>FrontRightHubMotorWheel</child>
      <pose relative_to="FrontRightArm">.11861 -.095 -.07453 0 0 0</pose>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>
        <link name="BackRightArm">
      <pose relative_to="BackRightArmJoint">0 0 0 0 0 0</pose>
      <inertial>
        <mass>1.16</mass>
        <inertia>
          <ixx>0.006274</ixx>
          <ixy>0.002744</ixy>
          <ixz>0</ixz>
          <iyy>0.007678</iyy>
          <iyz>0</iyz>
          <izz>0.009408</izz>
        </inertia>
      </inertial>
      <gravity>true</gravity>
      <velocity_decay/>
      <visual name="BackRightArmMetal_Visual">
        <pose>0 0 0 0 -.017 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://rover/ArmRightMetal.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <visual name="BackRightArmPlastic_Visual">
        <pose>0 0 0 0 -.017 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://rover/ArmRightPlastic.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <!-- <visual name="BackRightArm_Collision_Visual">
        <pose>0.055 0 -.0305 0 .505 0</pose>
        <geometry>
          <box>
            <size>.21 .075 .038</size>
          </box>
        </geometry>
        <material>
          <diffuse>0 0 1 1</diffuse>
          <ambient>0 0 1 1</ambient>
        </material>
      </visual> -->
      <collision name="BackRightArm_Collision">
        <pose>0.055 0 -.0305 0 .505 0</pose>
        <geometry>
          <box>
            <size>.21 .075 .038</size>
          </box>
        </geometry>
        <surface>
          <contact>
            <ode>
              <min_depth>0.001</min_depth>
              <max_vel>0</max_vel>
            </ode>
          </contact>
        </surface>
      </collision>
    </link>
    <link name="BackRightHubMotorWheel">
      <pose relative_to="BackRightHubMotorWheelJoint">0 0 0 0 0 0</pose>
      <inertial>
        <mass>3.854</mass>
        <inertia>
          <ixx>0.009002</ixx>
          <ixy>0.0006021</ixy>
          <ixz>0</ixz>
          <iyy>0.01313</iyy>
          <iyz>0</iyz>
          <izz>0.009003</izz>
        </inertia>
      </inertial>
      <gravity>true</gravity>
      <velocity_decay/>
      <visual name="BackRightHubMotorWheelMetal_Visual">
        <pose>0 0 0 0 0 3.14159265359</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://rover/HubMotor.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <visual name="BackRightHubMotorWheelRubber_Visual">
        <pose>0 0 0 0 0 3.14159265359</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://rover/RubberWheel.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <!-- <visual name="BackRightHubMotorWheel_Collision_Visual">
        <pose>0 0 0 1.57079632679 0 0</pose>
        <geometry>
          <cylinder>
            <radius>.108</radius>
            <length>.06</length>
          </cylinder>
        </geometry>
        <material>
          <diffuse>1 0 0 1</diffuse>
          <ambient>1 0 0 1</ambient>
        </material>
      </visual> -->
      <collision name="BackRightHubMotorWheel_Collision">
        <pose>0 0 0 1.57079632679 0 0</pose>
        <geometry>
          <cylinder>
            <radius>.108</radius>
            <length>.06</length>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode>
              <min_depth>0.001</min_depth>
              <max_vel>0</max_vel>
            </ode>
          </contact>
          <friction>
            <ode>
              <mu>1.0</mu>
              <mu2>0.8</mu2>
              <fdir1>1 0 0</fdir1>
            </ode>
          </friction>
        </surface>
      </collision>
    </link>
    <joint name="BackRightArmJoint" type="revolute">
      <parent>base_link</parent>
      <child>BackRightArm</child>
      <pose relative_to="base_link">-.263 .238 .029 0 0 3.14159265359</pose>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-0.5</lower>
          <upper>0.5</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>300</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>
    <joint name="BackRightHubMotorWheelJoint" type="revolute">
      <parent>BackRightArm</parent>
      <child>BackRightHubMotorWheel</child>
      <pose relative_to="BackRightArm">.11861 -.095 -.07453 0 0 3.14159265359</pose>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>

    <!-- RGBD camera -->

<!-- RGBD Camera sensor definition -->
<sensor name="rgbd_camera" type="rgbd_camera">
  <!-- Position and orientation of the camera relative to its parent link
       Format: x y z roll pitch yaw (in meters and radians) -->
  <pose>0 0 0.3 0 0 0</pose>
  
  <!-- Update frequency of the camera in Hz -->
  <update_rate>30</update_rate>
  
  <!-- Topic name prefix for raw camera data in Gazebo -->
  <topic>rgbd_camera</topic>
  
  <!-- Enable visualization of camera frustum in Gazebo -->
  <visualize>true</visualize>

  <!-- Camera configuration -->
  <camera>
    <!-- Horizontal field of view in radians -->
    <horizontal_fov>1.047</horizontal_fov>
    
    <!-- Image properties -->
    <image>
      <!-- Image width in pixels -->
      <width>640</width>
      <!-- Image height in pixels -->
      <height>480</height>
      <!-- Image format -->
      <format>R8G8B8</format>
    </image>
    
    <!-- Clip distances -->
    <clip>
      <!-- Minimum clipping distance in meters -->
      <near>0.1</near>
      <!-- Maximum clipping distance in meters -->
      <far>100</far>
    </clip>
    
    <!-- Depth camera properties -->
    <depth_camera>
      <!-- Minimum clipping distance for depth camera in meters -->
      <near>0.1</near>
      <!-- Maximum clipping distance for depth camera in meters -->
      <far>10.0</far>
    </depth_camera>
    
    <!-- Noise model for more realistic camera simulation -->
    <noise>
      <!-- Gaussian (normal) distribution noise -->
      <type>gaussian</type>
      <!-- Mean value of the noise (bias) -->
      <mean>0.0</mean>
      <!-- Standard deviation of the noise -->
      <stddev>0.007</stddev>
    </noise>
  </camera>
  
  <!-- Gazebo plugin for sensor functionality -->
  <plugin
    filename="libgz-sim-sensors-system.so"
    name="gz::sim::systems::Sensors">
    <!-- Rendering engine to be used -->
    <render_engine>ogre2</render_engine>
  </plugin>
  
  <!-- ROS 2 integration plugin for the RGBD camera -->
  <plugin
    filename="libgz-sim-ros-camera-system.so"
    name="gz::sim::systems::RosCamera">
    <!-- ROS 2 namespace for the published topics -->
    <namespace>robot</namespace>
    
    <!-- RGB camera topic configurations -->
    <ros>
      <!-- ROS 2 QoS profile settings for reliable communication -->
      <qos>
        <profile>sensor_data</profile>
        <durability>volatile</durability>
        <reliability>reliable</reliability>
      </qos>
      
      <!-- RGB image topic name suffix -->
      <camera_info_topic>camera_info</camera_info_topic>
      <image_topic>image_raw</image_topic>
    </ros>
    
    <!-- TF frame name for this camera sensor -->
    <frame_name>camera_link</frame_name>
    
    <!-- Camera information -->
    <camera_name>camera</camera_name>
    <camera_info_topic>camera_info</camera_info_topic>
    <hack_baseline>0.07</hack_baseline>
  </plugin>
  
  <!-- ROS 2 integration plugin for the depth camera -->
  <plugin
    filename="libgz-sim-ros-depth-camera-system.so"
    name="gz::sim::systems::RosDepthCamera">
    <!-- ROS 2 namespace for the published topics -->
    <namespace>robot</namespace>
    
    <!-- Depth camera topic configurations -->
    <ros>
      <!-- ROS 2 QoS profile settings for reliable communication -->
      <qos>
        <profile>sensor_data</profile>
        <durability>volatile</durability>
        <reliability>reliable</reliability>
      </qos>
      
      <!-- Depth image topic name suffix -->
      <camera_info_topic>depth/camera_info</camera_info_topic>
      <image_topic>depth/image_raw</image_topic>
      <points_topic>depth/points</points_topic>
    </ros>
    
    <!-- TF frame name for the depth sensor -->
    <frame_name>camera_link</frame_name>
    
    <!-- Depth camera information -->
    <camera_name>depth_camera</camera_name>
    <camera_info_topic>depth/camera_info</camera_info_topic>
    <hack_baseline>0.07</hack_baseline>
  </plugin>
</sensor>

    <!-- 3D Lidar -->

<!-- GPU-accelerated 3D LiDAR sensor definition -->
<sensor name="lidar" type="gpu_lidar">
  <!-- Position and orientation of the lidar relative to its parent link
       Format: x y z roll pitch yaw (in meters and radians) -->
  <pose>0 0 0.5 0 0 0</pose>
  
  <!-- Topic name for raw lidar data in Gazebo -->
  <topic>lidar</topic>
  
  <!-- Frequency of sensor data publication in Hz -->
  <update_rate>10</update_rate>
  
  <lidar>
    <scan>
      <!-- Horizontal scan configuration -->
      <horizontal>
        <!-- Number of rays in the horizontal plane -->
        <samples>360</samples>
        <!-- Angular resolution between rays -->
        <resolution>1</resolution>
        <!-- Horizontal field of view (min angle in radians) -->
        <min_angle>-3.14159</min_angle>
        <!-- Horizontal field of view (max angle in radians) -->
        <max_angle>3.14159</max_angle>
      </horizontal>
      
      <!-- Vertical scan configuration (for 3D lidar) -->
      <vertical>
        <!-- Number of layers in the vertical direction -->
        <samples>16</samples>
        <!-- Angular resolution between vertical layers -->
        <resolution>1</resolution>
        <!-- Vertical field of view (min angle in radians) -->
        <min_angle>-0.261799</min_angle>
        <!-- Vertical field of view (max angle in radians) -->
        <max_angle>0.261799</max_angle>
      </vertical>
    </scan>
    
    <!-- Range properties of the lidar -->
    <range>
      <!-- Minimum detection range in meters -->
      <min>0.08</min>
      <!-- Maximum detection range in meters -->
      <max>30.0</max>
      <!-- Resolution of range measurements in meters -->
      <resolution>0.01</resolution>
    </range>
    
    <!-- Noise model for more realistic simulation -->
    <noise>
      <!-- Gaussian (normal) distribution noise -->
      <type>gaussian</type>
      <!-- Mean value of the noise (bias) -->
      <mean>0.0</mean>
      <!-- Standard deviation of the noise -->
      <stddev>0.01</stddev>
    </noise>
  </lidar>
  
  <!-- Enable visualization of the lidar rays in Gazebo -->
  <visualize>true</visualize>
  
  <!-- Gazebo plugin for sensor functionality -->
  <plugin
    filename="libgz-sim-sensors-system.so"
    name="gz::sim::systems::Sensors">
    <!-- Rendering engine to be used -->
    <render_engine>ogre2</render_engine>
  </plugin>
  
  <!-- ROS 2 integration plugin for the GPU lidar -->
  <plugin
    filename="libgz-sim-ros-gpu-lidar-system.so"
    name="gz::sim::systems::RosGpuLidar">
    <!-- ROS 2 namespace for the published topics -->
    <namespace>robot</namespace>
    <!-- ROS 2 topic name for laser scan data -->
    <topic>scan</topic>
    <!-- TF frame name for this lidar sensor -->
    <frame_name>lidar_link</frame_name>
  </plugin>
</sensor>



    <plugin
      filename="ignition-gazebo-diff-drive-system"
      name="gz::sim::systems::DiffDrive">
      <right_joint>BackLeftHubMotorWheelJoint</right_joint>
      <left_joint>FrontLeftHubMotorWheelJoint</left_joint>
      <left_joint>BackRightHubMotorWheelJoint</left_joint>
      <right_joint>FrontRightHubMotorWheelJoint</right_joint>
      <wheel_separation>0.667</wheel_separation>
      <wheel_radius>0.108</wheel_radius>
      <max_linear_acceleration>3</max_linear_acceleration>
      <min_linear_acceleration>-3</min_linear_acceleration>
      <max_angular_acceleration>3</max_angular_acceleration>
      <min_angular_acceleration>-3</min_angular_acceleration>
      <max_linear_velocity>5</max_linear_velocity>
      <min_linear_velocity>-5</min_linear_velocity>def generate_launch_description():
    package_dir = get_package_share_directory('my_package')


# Get robot
    robot_description_path = os.path.join(package_dir, 'resource', 'my_robot.urdf')

# Get map
    webots = WebotsLauncher(
        world=os.path.join(package_dir, 'worlds', 'my_world.wbt')
    )

    my_robot_driver = WebotsController(
        robot_name='my_robot',
        parameters=[
            {'robot_description': robot_description_path},
        ]
    )

    obstacle_avoider = Node(
        package='my_package',
        executable='obstacle_avoider',
    )

    return LaunchDescription([
        webots,
        my_robot_driver,
        obstacle_avoider,
        launch.actions.RegisterEventHandler(
            event_handler=launch.event_handlers.OnProcessExit(
                target_action=webots,
                on_exit=[launch.actions.EmitEvent(event=launch.events.Shutdown())],
            )
        )
    ])
      <max_angular_velocity>2</max_angular_velocity>
      <min_angular_velocity>-2</min_angular_velocity>


      <!-- Input -->
      <topic>cmd_vel</topic>

      <!-- Output -->
      <odom_topic>odom</odom_topic>
      <odom_publish_frequency>10</odom_publish_frequency>

    </plugin>

    <!-- Joint publisher -->
    <plugin filename="libignition-gazebo-joint-state-publisher-system.so" name="ignition::gazebo::systems::JointStatePublisher"/>


  </model>
</sdf>
